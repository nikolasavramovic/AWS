AWSTemplateFormatVersion: 2010-09-09
Description: "Cloudformation demo"

Parameters:
  Environment:
    Description: Environment Name
    Type: String
  BuildHash:
    Type: String

Resources:   
    sqsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: !Sub youtube-demo-cloudformation-queue${Environment}

    lambdaFunctionIamRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
                - Effect: Allow
                  Principal:
                    Service: lambda.amazonaws.com
                  Action: sts:AssumeRole
        Policies: 
        - PolicyName: "youtube-demo-lambda-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents" 
                Resource: "*"
        - PolicyName: allowSqs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                    - "sqs:ReceiveMessage"
                    - "sqs:DeleteMessage"
                    - "sqs:GetQueueAttributes" 
                    - "sqs:ChangeMessageVisibility" 
                Resource: !GetAtt sqsQueue.Arn

    lambdaFunctionEventSourceMapping:
      Type: AWS::Lambda::EventSourceMapping      
      Properties:
        BatchSize: 10
        Enabled: true
        EventSourceArn: !GetAtt sqsQueue.Arn
        FunctionName: !GetAtt lambdaFunction.Arn


    lambdaFunction:
        Type: AWS::Lambda::Function
        Metadata:
          BuildHash: !Ref BuildHash
        Properties:
          Description: "CloudFormation Demo Lambda"
          FunctionName: !Sub youtube-demo-cloudformation${Environment}
          Handler: Cloudformation-demo::Cloudformation_demo.Function::FunctionHandler
          MemorySize: 128
          Role: !GetAtt lambdaFunctionIamRole.Arn
          Runtime: dotnet8
          Timeout: 30
          Environment:
              Variables:
                  key1: value1
          Code:
              S3Bucket: learning-cloudformation-package
              S3Key: lambda.zip
          Tags:
              - Key: keyname
                Value: value






          # CodeUri: ./bin/Release/net8.0
          
          
          # Events:
          #   Api:
          #     Type: Api
          #     Properties:
          #       Path: /myapi
          #       Method: GET